#!/bin/bash

# Set environment variables
isHost=false
isWSL2=false
isDarwin=false

# macOS detection via uname
if [ "$(uname)" = "Darwin" ]; then
  isHost=true
  isDarwin=true
  # Install Homebrew
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# WSL2 detection via /mnt/c
if [ -d /mnt/c ]; then
  isHost=true
  isWSL2=true
fi

# Install common packages
{{- range .packages.common.nix }}
nix-env -iA {{ . }}
{{- end }}

# Install packages if in host environment
if [ "$isHost" = true ]; then
  {{- range .packages.host.nix }}
  nix-env -iA {{ . }}
  {{- end }}
fi

# Install additional packages if in WSL2 environment
if [ "$isWSL2" = true ]; then
  {{- range .packages.wsl2.nix }}
  nix-env -iA {{ . }}
  {{- end }}

  # Download and install the latest release of Ghostty:
  REPO="mkasberg/ghostty-ubuntu"
  API_URL="https://api.github.com/repos/$REPO/releases/latest"
  RELEASE_INFO=$(curl -s $API_URL)
  TAG=$(echo "$RELEASE_INFO" | jq -r .tag_name)
  FILE_NAME="ghostty_${TAG}_amd64_24.04.deb"
  DOWNLOAD_URL="https://github.com/$REPO/releases/download/$TAG/$FILE_NAME"
  curl -L -o "$FILE_NAME" "$DOWNLOAD_URL"
  sudo apt install ./$FILE_NAME
  rm #FILE_NAME

  # Install ODBC Driver 18 for SQL Server
  curl -sSL -O https://packages.microsoft.com/config/ubuntu/$(grep VERSION_ID /etc/os-release | cut -d '"' -f 2)/packages-microsoft-prod.deb
  sudo dpkg -i packages-microsoft-prod.deb
  rm packages-microsoft-prod.deb
  sudo apt update

  {{- range .packages.wsl2.apteula }}
  sudo ACCEPT_EULA=Y apt install -y {{ . }}
  {{- end }}

  {{- range .packages.wsl2.apt }}
  sudo apt install -y {{ . }}
  {{- end }}

  {{- range .packages.wsl2.apt }}
  sudo apt install -y {{ . }}
  {{- end }}

  source ~/.bashrc

fi

# Install additional packages if in MacOS environment
if [ "$isDarwin" = true ]; then
  {{- range .packages.darwin.cask }}
  brew install --cask {{ . | quote }}
  {{- end }}
fi
